/**********
 * Author:  Y.Nakaue
 * Created: 2023/05/29
 * Edited:  2023/05/29
 **********/

#include "WaPP.h"

/* 改行のみ行う関数 */
無し 改行()
{
    標準出力 << 行終端;
}

/* メイン関数 */
整数 主関数()
{
    /* 各種型の変数を用意する */
    整数 ある整数値 代入する 10;
    浮動小数点数 ある浮動小数点数 代入する 3.14;
    倍精度浮動小数点数 ある倍精度浮動小数点数 代入する 123456789.123456789;
    文字 ある文字 代入する 'A';
    真偽値 ある真偽値 代入する 真;

    /* 標準入力 */
    標準出力 << "整数値を入力してください. -> ";
    標準入力 >> ある整数値;
    
    改行();

    /* 標準出力 */
    標準出力 << "整数値: " << ある整数値 << 行終端;
    標準出力 << "円周率: " << ある浮動小数点数 << 行終端;
    標準出力 << "倍精度浮動小数点数値: " << ある倍精度浮動小数点数 << 行終端;
    標準出力 << "文字: " << ある文字 << 行終端;
    標準出力 << "真偽値: " << ある真偽値 << 行終端;

    改行();

    /* if文 */
    もし (ある整数値 大なり 5)
    {
        標準出力 << "整数値は5より大きいです。" << 行終端;
    }
    そうでなければ
    {
        標準出力 << "整数値は5以下です。" << 行終端;
    }

    改行();

    /* for文 */
    繰り返す (整数 カウンタ変数 代入する 0; カウンタ変数 小なり 5; カウンタ変数++)
    {
        標準出力 << "カウンタ変数の値は: " << カウンタ変数 << 行終端;
    }

    改行();

    /* while文 */
    その間 (ある整数値 大なり 0)
    {
        標準出力 << "ある整数値の値は: " << ある整数値 << 行終端;
        ある整数値--;
    }

    改行();

    /* クラスの定義 */
    クラス サンプルクラス
    {
    公開:
        サンプルクラス()
        {
            標準出力 << "\"サンプルクラスのインスタンスが作成されました.\"" << 行終端;
        }

        整数 メンバ変数の整数値;
        
        無し 値を出力する()
        {
            標準出力 << "メンバ変数の整数値の値は: " << これ の メンバ変数の整数値 << 行終端;
        }
    };

    /* インスタンス生成 */
    サンプルクラス* インスタンス 代入する 生成 サンプルクラス;

    改行();

    インスタンス の メンバ変数の整数値 代入する 100;
    インスタンス の 値を出力する();

    /* インスタンス破棄 */
    削除 インスタンス;

    戻り値 0;
}
